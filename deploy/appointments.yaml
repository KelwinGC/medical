# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  appointment:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: index.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 0
        DestinationConfig:
          OnSuccess:
            Destination:
              Ref: SNSTopicDestinationSuccess2
            Type: SNS
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:us-east-1:360022217398:appointments.fifo
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:us-east-1:360022217398:sns_appointments
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:360022217398:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:360022217398:log-group:/aws/lambda/appointment:*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:GetRecords
              Resource: arn:aws:dynamodb:us-east-1:360022217398:table/appointments
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:us-east-1:360022217398:sns_main
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:us-east-1:360022217398:table/schedules
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        SQS1:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
                - SQSQueue1
                - Arn
            BatchSize: 10
        Api1:
          Type: Api
          Properties:
            Path: /appointments
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  SQSQueue1:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue1
      SqsManagedSseEnabled: true
  SNSTopicDestinationSuccess2:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SNSTopicDestinationSuccess2
      KmsMasterKeyId:
        Ref: KMSKeyForSNSDestinationSuccess2
  KMSKeyForSNSDestinationSuccess2:
    Type: AWS::KMS::Key
